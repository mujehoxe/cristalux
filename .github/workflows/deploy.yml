name: Deploy Cristalux Frontend

on: 
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint
        continue-on-error: true

      - name: Build project
        run: npm run build
        env:
          NODE_ENV: production

      - name: Create deployment archive
        run: |
          cd dist
          tar -czf ../deployment.tar.gz .
          cd ..

      - name: Validate deployment secrets
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          if [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
            echo "‚ùå SSH_PRIVATE_KEY secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.SSH_HOST }}" ]; then
            echo "‚ùå SSH_HOST secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.SSH_USER }}" ]; then
            echo "‚ùå SSH_USER secret is not set"
            exit 1
          fi
          echo "‚úÖ All required secrets are configured"

      - name: Install SSH key
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: "just-a-placeholder-so-we-dont-get-errors"

      - name: Adding Known Hosts
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          echo "üîç Attempting to scan SSH host: ${{ secrets.SSH_HOST }}"
          if [ -z "${{ secrets.SSH_HOST }}" ]; then
            echo "‚ùå SSH_HOST is empty or not set"
            exit 1
          fi
          
          echo "üì° Running ssh-keyscan for host: ${{ secrets.SSH_HOST }}"
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts 2>&1 || {
            echo "‚ùå ssh-keyscan failed. Possible issues:"
            echo "   - Host ${{ secrets.SSH_HOST }} is not reachable"
            echo "   - SSH service is not running on port 22"
            echo "   - Firewall blocking connection"
            echo "   - Invalid SSH_HOST secret value"
            exit 1
          }
          echo "‚úÖ Successfully added ${{ secrets.SSH_HOST }} to known_hosts"

      - name: Test SSH connection
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          echo "üîó Testing SSH connection to ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}"
          ssh -o ConnectTimeout=10 -o BatchMode=yes ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'echo "SSH connection successful!"' || {
            echo "‚ùå SSH connection failed. Please check:"
            echo "   - SSH_HOST: ${{ secrets.SSH_HOST }}"
            echo "   - SSH_USER: ${{ secrets.SSH_USER }}"
            echo "   - SSH private key is correct"
            echo "   - Server allows SSH connections"
            exit 1
          }
          echo "‚úÖ SSH connection test passed"

      - name: Deploy to production server
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          # Create backup of current deployment
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "sudo cp -r /var/www/cristalux-frontend /var/www/cristalux-frontend-backup-$(date +%Y%m%d-%H%M%S) || true"
          
          # Upload new build
          scp deployment.tar.gz ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/
          
          # Deploy new build
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
            # Create temporary directory
            mkdir -p ~/temp-deploy
            cd ~/temp-deploy
            
            # Extract new build
            tar -xzf ~/deployment.tar.gz
            
            # Replace old files
            sudo rm -rf /var/www/cristalux-frontend/dist/*
            sudo cp -r * /var/www/cristalux-frontend/dist/
            
            # Set proper permissions
            sudo chown -R www-data:www-data /var/www/cristalux-frontend/dist
            sudo chmod -R 755 /var/www/cristalux-frontend/dist
            
            # Cleanup
            cd ~
            rm -rf ~/temp-deploy ~/deployment.tar.gz
            
            # Reload nginx
            sudo systemctl reload nginx
            
            echo 'Deployment completed successfully!'
          "

      - name: Notify deployment status
        if: always() && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "‚úÖ Deployment successful to https://ecom.oussamagaham.com"
          else
            echo "‚ùå Deployment failed"
          fi
